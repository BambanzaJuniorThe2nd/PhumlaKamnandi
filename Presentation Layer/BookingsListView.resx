<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="deleteButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>